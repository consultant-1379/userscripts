#!/bin/bash
#####################################################################
# File Name    : checkServerExecuter.sh 
# Version      : 1.03
# Author       : Fatih ONUR
# Description  : Pre check NETSim script executer
# Date Created : 2016.11.24
#####################################################################

function runRemotely() {
  serverName=$1
  user=$2
  pass=$3
  cmd="$4"
  msg="$5"
  date=`date +%Y-%m-%d:%H:%M:%S`
  echo "<$date> INFO: Start running cmd:\"$cmd\" on $serverName with user:$user, pass:$pass"
  #echo "here-1"
  /usr/bin/expect <<END 
    set timeout 15
    log_user 0
    spawn ssh -o StrictHostKeyChecking=no $user@${serverName}.athtem.eei.ericsson.se "$cmd"
    expect {
      "*assword:" { send "${pass}\r" ; exp_continue }    
    }
    puts \$expect_out(buffer)

    lassign [wait] pid spawnid os_error_flag exit_status

    if {\$os_error_flag == 0} {
      puts "exit_status:\$exit_status:${msg}"
    }

exit \$exit_status
END
  echo "<$date> INFO: End running cmd:\"$cmd\" on $serverName with user:$user, pass:$pass"
}

echo "... $0 script started running at "`date`
echo "" 

#servers="ieatnetsimv6014-01"
servers=$netsims
user='root'
pass='shroot'
scriptLink="https://arm901-eiffel004.athtem.eei.ericsson.se:8443/nexus/content/repositories/simnet/com/ericsson/simnet/pre_hc/checkServer.sh.txt"

cmdArray=()
msgArray=()
cmdArray[0]="curl -sSL $scriptLink | bash +x"
msgArray[0]='Pre HC script has not executed properly'

for serverName in $servers
do
  i=1
  log="${0}-${serverName}.log"
  echo "serverName=$serverName" | tee $log
  for cmd in "${cmdArray[@]}"
  do
    msg="${msgArray[$((i-1))]}"
    #echo "exit_status:$cmd:$msg" | tee -a $log
    runRemotely "$serverName" "$user" "$pass" "$cmd" "$msg" | tee -a $log &
    i=$((i+1))
  done
done
wait

for i in {1..2}
do
  for serverName in $servers
  do
    #echo "#### serverName=${serverName} ####"
    for cmd in "${cmdArray[@]}"
    do
      log="${0}-${serverName}.log"
      exit_os_status=`cat $log | grep -i "exit_status"`
      exit_os_failure=`echo "$exit_os_status" | grep -vc "exit_status:0"`
      exit_msg=`echo "$exit_os_status" | grep -v "exit_status:0" | cut -d ':' -f 3`
      #echo "[exit_os_failure]=$exit_os_failure"
      #echo "[exit_msg]=$exit_msg"
      hc_failure=`cat $log | grep -ic "FAILED"`
      #echo "[hc_failure]=$hc_failure"
      if [[ "$exit_os_failure" -gt  0 ]] ; then
        echo "#### Retrying for serverName=${serverName} ($i/2) ####" | tee $log 
        runRemotely "$serverName" "$user" "$pass" "$cmd" "$msg" | tee -a $log &
      fi
    done
  done
  wait
done


exit_flag=0

i=1
for serverName in $servers
do
  echo "#### serverName=${serverName} ####"
  for cmd in "${cmdArray[@]}"
  do
    log="${0}-${serverName}.log"
    exit_os_status=`cat $log | grep -i "exit_status"`
    exit_os_failure=`echo "$exit_os_status" | grep -vc "exit_status:0"`
    exit_msg=`echo "$exit_os_status" | grep -v "exit_status:0" | cut -d ':' -f 3`
    #echo "[exit_os_failure]=$exit_os_failure"
    #echo "[exit_msg]=$exit_msg"
    hc_failure=`cat $log | grep -ic "FAILED"`
    #echo "[hc_failure]=$hc_failure"
    if [[ "$exit_os_failure" -gt  0 ]] ; then
      echo "FAILED: $serverName."
      OS_ERROR="Unexpected OS error occured. Check that server is not down!"
      echo "--REASON: `echo $exit_msg | perl -lne 'if(length $_ < 1){print "'"$OS_ERROR="'"}else{print}'`"
      exit_flag=-1
    elif [[ "$hc_failure" -gt  0 ]] ; then
      echo "PRE HC FAILED: $serverName."
      IFS=$'\n'
      for msg in `cat $log | grep -i FAILED`
      do
        echo "--REASON:$msg"
      done
      unset IFS
      exit_flag=-2

    else
      echo "PASSED: $serverName"
    fi 
    i=$((i+1))
  done
done

echo "" 
echo "...$0 script ended at "`date` 

exit $exit_flag
